# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        TrainingBundle\Entity\User:
            algorithm: bcrypt
            cost: 10
        IMAG\LdapBundle\User\LdapUser: plaintext
    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: TrainingBundle:User
        ldap:
            id: imag_ldap.security.user.provider
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        default:
            anonymous:  ~
            http_basic: ~
            provider: ldap
            form_login:
                login_path: /login
                check_path: /login_check
                csrf_provider: form.csrf_provider
            remember_me:
                key:      "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~
            logout:
                csrf_parameter:       _csrf_token
                csrf_token_generator: form.csrf_provider
                csrf_token_id:        logout
                path:                 /logout
                target:               /blog/
        # the login page has to be accessible for everybody
#        demo_login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        # secures part of the application
#        demo_secured_area:
#            pattern:    ^/demo/secured/
#            # it's important to notice that in this case _demo_security_check and _demo_login
#            # are route names and that they are specified in the AcmeDemoBundle
#            form_login:
#                check_path: _demo_security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/blog, roles: ROLE_USER }
#        - { path: ^/demo/secured/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/, roles: ROLE_ADMIN }

